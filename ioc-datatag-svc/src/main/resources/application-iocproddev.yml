# 开发环境配置
debug: false
server:
  port: 8080 #tomcat运行端口
  servlet: 
    context-path: /

#mybatis:
#  config-location: classpath:mybatis-config.xml
#  typeAliasesPackage: com.openjava.example.mybatis.domain
#  mapperLocations: 
#    -classpath:com.openjava.example.*.mapper/*.xml
spring:
  datasource:
    # 用MySQL
    #    driver-class-name: com.mysql.jdbc.Driver
    #    url: jdbc:mysql://rm-wz9a1c8d803l35e2hio.mysql.rds.aliyuncs.com:3306/cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false
    #    username: alitest
    #    password: Ch#123456
    # 用Oracle
    driver-class-name: oracle.jdbc.OracleDriver
    url: ENC(pdkETFhba/RP7Z7DyJnE8U8yiDqrDMbytnzSfvge7uDYDrEDKDJQAtaQCl8oJW+/q7XpUk0iq5c=)
    username: ENC(bj5AMYvG8zZ956TDzg/6FMaZo0YK2BXt)
    password: ENC(F4SHg+Y7jo2GC2BnKvx8Rs8b5biSGt60)
    druid:
      initial-size: 1
      max-active: 100
      min-idle: 1
      max-wait: 20000 # 配置获取连接等待超时的时间
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      max-open-prepared-statements: 20 #和上面的等价
      # validation-query: SELECT 'x'
      validation-query: SELECT 'x' FROM DUAL
      validation-query-timeout: 1
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      filters: stat
      
  redis:
      # redis数据库索引（默认为0），我们使用索引为3的数据库，避免和其他数据库冲突
      database: 0
      # redis服务器地址（默认为localhost）
      host: 19.104.50.204
      # redis端口（默认为6379）
      port: 6379
      # redis访问密码（默认为空）
      password: ENC(18y0O78BQc5x3eqduciALjZjw5P80+Y4)
      # redis连接超时时间（单位为毫秒）
      timeout: 10000
      # redis连接池配置
      jedis: 
        pool:
          # 最大可用连接数（默认为8，负数表示无限）
          max-active: 500
          # 最大空闲连接数（默认为8，负数表示无限）
          max-idle: 8
          # 最小空闲连接数（默认为0，该值只有为正数才有作用）
          min-idle: 0
          # 从连接池中获取连接最大等待时间（默认为-1，单位为毫秒，负数表示无限）
          max-wait: 5000
        
  servlet: 
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB

ljdp:
  ftpserver:
    url: 19.104.50.204
    port: 21
    mode: PASV
    username: nanjian
    password: ENC(GnxvP/7gqmPanTdk56XI0L4E7lt7w5FOcQawRI5b0S8=)
    remote-path: /
    local-temp-path: /tmp
    localPath: /ioc-datatag
  dfs:
    ftp2http-proxy: http://19.104.50.204/iocadminsvc/ftp
    ftp2http-download: http://19.104.50.204/iocadminsvc/ljdp/dfs/downloadByFid.act?fid=
  fileupload:
    # 覆盖batch.fileupload.path配置
    local-path: /tmp
  security:
    api:
      skey: ENC(U9gx2By8DaCRK/VM7SgZfFluZy8G7InNSmJvTnI8LEDxL8GSns8dVWZJ0cHm6mY2)


schedulejob: #定时任务组件
  jobMethod: com.openjava.datatag.schedule.job.Schedulejob
  jobGroup: scanjob
  jobName: scanjob
  queue: 0 0/1 * * * ? * #扫描新建模型频率

searchjob: #更新模型中间表定时任务
  jobMethod: com.openjava.datatag.schedule.job.DtTaggingUpdateIndexJob
  jobGroup: search_job
  jobName: search_job
  queue: 0 0/5 * * * ? * #更新频率

dataSet: #数据集相关
  resourceDataUrl: http://19.104.40.36/dsweb/pds/datalake/dataLake/resourceData/

#模型立即执行
messageChannel:
  runNow: false

pgconfig:
  ip: 19.106.85.70
  port: 25308
  username: datatag
  password: datatag12#$
  dataBaseName: datalake_application
  pooled: true
  schema: nj_datatag

platform:
  baseUrl: http://ioc-paas-svc:8080
  jobPath: http://19.104.40.36/datatagweb/cooperationModel
  tagModelPath: http://19.104.40.36/datatagweb/lableImage
  spUnifyWorkform: ${platform.baseUrl}/category/workform/spUnifyWorkform #新增/编辑工单
  finish: ${platform.baseUrl}/category/workform/spUnifyWorkform/finish/%s/%S-%s #完成工单
  cancel: ${platform.baseUrl}/category/workform/spUnifyWorkform/cancel/%s/%S-%s #作废工单/{formType}/{businessId}-{userId}
  spUnifyMsgNotice: ${platform.baseUrl}/category/workform/spUnifyMsgNotice  #新增告警消息

